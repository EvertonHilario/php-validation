services:
  api:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    container_name: api
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/var/www
    working_dir: /var/www
    depends_on:
      - db
    networks: [ decoupled-laravel-react ]
    ports: [ "8000:8000" ]
    command: sh -c "if [ -d vendor ]; then php artisan serve --host=0.0.0.0 --port=8000; else echo 'Diretório vendor não encontrado. O contêiner está aguardando a instalação das dependências. Execute os comandos do README.md'; tail -f /dev/null; fi"

  app:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    container_name: app
    # env_file:
    #   - ./frontend/.env
    volumes:
      - ./frontend:/app
    working_dir: /app
    depends_on: [ api ]
    networks: [ decoupled-laravel-react ]
    ports: [ "5173:5173" ]
    command: sh -c "if [ -d node_modules ]; then npm run dev; else echo 'Diretório node_modules não encontrado. Execute npm install dentro do container. Execute os comandos do README.md'; tail -f /dev/null; fi"
    stdin_open: true
    tty: true

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_DB: decoupled-laravel-react
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
    volumes: [ ./pgdata:/var/lib/postgresql/data ]
    networks: [ decoupled-laravel-react ]
    ports: [ "5432:5432" ]

volumes:
  pgdata:

networks:
  decoupled-laravel-react: {}
